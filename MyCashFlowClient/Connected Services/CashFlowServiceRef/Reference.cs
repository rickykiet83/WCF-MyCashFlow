//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCashFlowClient.CashFlowServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Finance", Namespace="http://schemas.datacontract.org/2004/07/MyCashFlow")]
    [System.SerializableAttribute()]
    public partial class Finance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CashFlowServiceRef.ICashRecordService")]
    public interface ICashRecordService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Register", ReplyAction="http://tempuri.org/ICashRecordService/RegisterResponse")]
        string Register(string fullName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Register", ReplyAction="http://tempuri.org/ICashRecordService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string fullName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Login", ReplyAction="http://tempuri.org/ICashRecordService/LoginResponse")]
        string Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Login", ReplyAction="http://tempuri.org/ICashRecordService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/AddRecord", ReplyAction="http://tempuri.org/ICashRecordService/AddRecordResponse")]
        void AddRecord(string desc, int amount, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/AddRecord", ReplyAction="http://tempuri.org/ICashRecordService/AddRecordResponse")]
        System.Threading.Tasks.Task AddRecordAsync(string desc, int amount, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/DeleteRecord", ReplyAction="http://tempuri.org/ICashRecordService/DeleteRecordResponse")]
        void DeleteRecord(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/DeleteRecord", ReplyAction="http://tempuri.org/ICashRecordService/DeleteRecordResponse")]
        System.Threading.Tasks.Task DeleteRecordAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/UpdateRecord", ReplyAction="http://tempuri.org/ICashRecordService/UpdateRecordResponse")]
        void UpdateRecord(int id, string description, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/UpdateRecord", ReplyAction="http://tempuri.org/ICashRecordService/UpdateRecordResponse")]
        System.Threading.Tasks.Task UpdateRecordAsync(int id, string description, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/GetAllRecords", ReplyAction="http://tempuri.org/ICashRecordService/GetAllRecordsResponse")]
        MyCashFlowClient.CashFlowServiceRef.Finance[] GetAllRecords(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/GetAllRecords", ReplyAction="http://tempuri.org/ICashRecordService/GetAllRecordsResponse")]
        System.Threading.Tasks.Task<MyCashFlowClient.CashFlowServiceRef.Finance[]> GetAllRecordsAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICashRecordServiceChannel : MyCashFlowClient.CashFlowServiceRef.ICashRecordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CashRecordServiceClient : System.ServiceModel.ClientBase<MyCashFlowClient.CashFlowServiceRef.ICashRecordService>, MyCashFlowClient.CashFlowServiceRef.ICashRecordService {
        
        public CashRecordServiceClient() {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(string fullName, string email, string password) {
            return base.Channel.Register(fullName, email, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string fullName, string email, string password) {
            return base.Channel.RegisterAsync(fullName, email, password);
        }
        
        public string Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public void AddRecord(string desc, int amount, string email) {
            base.Channel.AddRecord(desc, amount, email);
        }
        
        public System.Threading.Tasks.Task AddRecordAsync(string desc, int amount, string email) {
            return base.Channel.AddRecordAsync(desc, amount, email);
        }
        
        public void DeleteRecord(int id) {
            base.Channel.DeleteRecord(id);
        }
        
        public System.Threading.Tasks.Task DeleteRecordAsync(int id) {
            return base.Channel.DeleteRecordAsync(id);
        }
        
        public void UpdateRecord(int id, string description, int amount) {
            base.Channel.UpdateRecord(id, description, amount);
        }
        
        public System.Threading.Tasks.Task UpdateRecordAsync(int id, string description, int amount) {
            return base.Channel.UpdateRecordAsync(id, description, amount);
        }
        
        public MyCashFlowClient.CashFlowServiceRef.Finance[] GetAllRecords(string email) {
            return base.Channel.GetAllRecords(email);
        }
        
        public System.Threading.Tasks.Task<MyCashFlowClient.CashFlowServiceRef.Finance[]> GetAllRecordsAsync(string email) {
            return base.Channel.GetAllRecordsAsync(email);
        }
    }
}
